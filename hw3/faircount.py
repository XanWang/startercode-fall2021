# -*- coding: utf-8 -*-
"""DS 410 HW3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gr64hjN88sw0U0Hbzp2e22EgrqEuShKn
"""

from mrjob.job import MRJob

class FairCount(MRJob):
  def mapper_init(self):
    self.cache = {}

  def mapper(self, key, line):
    for word in line:
      self.cache[word] += 1
      if( self.cache > len(self.cache)):
        for w in self.cache:
          yield w, self.cache[w]
        self.cache.clear()

  def mapper_final(self):
    if self.cache is not empty:
      for w in self.cache:
        yield w, self.cache[w]

   def reducer(self, key, values):
    yield (key, sum(values))
  

class LetterCount(MRJob):
  def mapper(self, key, line):
    for symbol in line:
      if isletter(symbol):
        yield (symbol, 1)

  def reducer(self, key, values):
    yield (key, sum(values))

if __name__ == '__main__':
  FairCount.run()